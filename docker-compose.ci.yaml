
services:
  postgres:
    build:
      context: .
      dockerfile: Dockerfile.postgres
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=adminSecret
      - PGDATA=/tmp/postgres-data
    ports:
      - "5432:5432"
    networks:
      - bank-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d simple_bank_py"]
      interval: 2s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7-alpine
    networks:
      - bank-network
    ports:
      - "6379:6379"
      - "53"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 2s
      timeout: 5s
      retries: 10

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.frontend
      args:
        VITE_API_URL: http://backend:5000
    networks:
      - bank-network
    ports:
      - "3000:80"
    depends_on:
      - backend

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "5000:5000"
    networks:
      - bank-network
    environment:
      - DEBUG=1
      - POSTGRES_DB=simple_bank_py
      - POSTGRES_USER=simplebank
      - POSTGRES_PASSWORD=simplebankSecret
      - POSTGRES_HOST=postgres
      - DJANGO_ALLOWED_HOSTS=backend,localhost
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully

  migrations:
    build:
      context: .
      dockerfile: Dockerfile.backend
    command: >
      sh -c "
        echo 'Waiting for Postgres...';
        while ! pg_isready -h postgres -U admin -d simple_bank_py; do sleep 1; done;
        echo 'Making migrations...';
        python manage.py makemigrations;
        echo 'Running migrations...';
        python manage.py migrate;
      "
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings
      - DATABASE_URL=postgres://admin:adminSecret@postgres:5432/simple_bank_py
      - POSTGRES_DB=simple_bank_py
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=adminSecret
      - POSTGRES_HOST=postgres
    networks:
      - bank-network

  seed_users:
    build:
      context: ./component_tests/seed_users
      dockerfile: Dockerfile.seed_users
    networks:
      - bank-network
    environment:
      - POSTGRES_DB=simple_bank_py
      - POSTGRES_USER=simplebank
      - POSTGRES_PASSWORD=simplebankSecret
      - POSTGRES_HOST=postgres
    depends_on:
      - postgres
      - migrations
   
  pytest_playwright_tests:
    build:
      context: ./component_tests/pytest_playwright_tests
      dockerfile: Dockerfile.pytest_playwright_tests
    networks:
      - bank-network
    depends_on:
      - frontend
      - backend
      - postgres
      - seed_users
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app
      - APP_BASE_URL=http://frontend

  playwright_codegen_tests:
    build:
      context: ./component_tests/playwright_codegen_tests
      dockerfile: Dockerfile.playwright_codegen_tests
    networks:
      - bank-network
    depends_on:
      - frontend
      - backend
      - postgres
      - selenium
      - seed_users
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app
      - APP_BASE_URL=http://frontend

  pytest_selenium_tests:
    build:
      context: ./component_tests/pytest_selenium_tests
      dockerfile: Dockerfile.pytest_selenium_tests
    cpus: 2
    networks:
      - bank-network
    depends_on:
      - frontend
      - backend
      - postgres
      - selenium
      - seed_users
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app
      - APP_BASE_URL=http://frontend
      - SELENIUM_REMOTE_URL=http://selenium:4444/wd/hub
    volumes:
      - ./test_reports:/reports

  behave_selenium_tests:
    build:
      context: ./component_tests/behave_selenium_tests
      dockerfile: Dockerfile.behave_selenium_tests
    networks:
      - bank-network
    depends_on:
      - frontend
      - backend
      - postgres
      - selenium
      - seed_users
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app
      - APP_BASE_URL=http://frontend
      - POSTGRES_DB=simple_bank_py
      - POSTGRES_USER=simplebank
      - POSTGRES_PASSWORD=simplebankSecret
      - POSTGRES_HOST=postgres
      - SELENIUM_REMOTE_URL=http://selenium:4444/wd/hub

  selenium:
    image: selenium/standalone-chrome:123.0
    cpus: 2
    container_name: selenium
    networks:
      - bank-network
    ports:
      - "4444:4444"
      
  postman_tests:
    build:
      context: ./component_tests/postman_tests
      dockerfile: Dockerfile.newman
    networks:
      - bank-network
    depends_on:
      - backend
      - seed_users
    command: >
      newman run "3 newman py-simplebank.postman_collection.json"
      --env-var base_url=http://backend:5000

  rest_assured_tests:
    build:
      context: ./component_tests/rest_assured_testng_tests
      dockerfile: Dockerfile.rest_assured_testng
    networks:
      - bank-network
    depends_on:
      - backend
    environment:
      - baseUrl=http://backend:5000
  
  unittests:
    build:
      context: .
      dockerfile: Dockerfile.backend
    command: >
      sh -c "
        echo 'Making migrations...' &&
        python manage.py makemigrations --noinput &&
        echo 'Running migrations...' &&
        python manage.py migrate --noinput &&
        echo 'Running unit tests...' &&
        coverage run manage.py test --settings=config.settings_test &&
        coverage report
      "
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings_test
    networks:
    - bank-network

networks:
  bank-network:
    driver: bridge

